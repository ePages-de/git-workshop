<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Auflösen von Merge Konflikten on Git Workshop</title><link>https://git-workshop.epages.works/collaboration/merge-conflicts/</link><description>Recent content in Auflösen von Merge Konflikten on Git Workshop</description><generator>Hugo -- gohugo.io</generator><language>de-de</language><atom:link href="https://git-workshop.epages.works/collaboration/merge-conflicts/index.xml" rel="self" type="application/rss+xml"/><item><title>Einleitung</title><link>https://git-workshop.epages.works/collaboration/merge-conflicts/1_einleitung/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://git-workshop.epages.works/collaboration/merge-conflicts/1_einleitung/</guid><description>In Projekten an denen mehrere Personen arbeiten, kommt es hin und wieder vor, dass Änderungen gemacht werden, die Git nicht mehr automatisch zusammenführen kann. Diese Situation wird auch als Merge Konflikt bezeichnet. Dieses Tutorial beschreibt die Schritte, die notwendig sind um einen Merge Konflikt aufzulösen.
Beispiel Als Beispiel betrachten wir das folgende Scenario:
Sie haben in der Datei content/links/_index.md in dem Abschnitt &amp;ldquo;Videos&amp;rdquo; einen Link zu einem neuen Video hinzugefügt.</description></item><item><title>git commit</title><link>https://git-workshop.epages.works/collaboration/merge-conflicts/5_git-commit/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://git-workshop.epages.works/collaboration/merge-conflicts/5_git-commit/</guid><description>Nun können Sie einen neuen Commit erstellen, in dem die Information über Ihre Entscheidung zu der Auflösung des Merge Konflikt gespeichert wird.
GitHub Desktop Wenn Sie zurück zu GitHub Desktop gehen, wird es erkennen, dass der Merge Konflikt aufgelöst wurde. Sie können den Merge Commit erstellen, indem Sie auf den &amp;ldquo;Commit Merge&amp;rdquo; Button klicken.</description></item><item><title>git fetch</title><link>https://git-workshop.epages.works/collaboration/merge-conflicts/2_git-fetch/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://git-workshop.epages.works/collaboration/merge-conflicts/2_git-fetch/</guid><description>Mit Hilfe von dem git fetch Befehl können Sie die Git zu den Remote Repositories bekannten Daten aktualisieren. Insbesondere muss nachgeschaut werden, was der letzte Commit auf dem &amp;ldquo;main&amp;rdquo; Branch in dem Upstream Repository (ePages-de/git-workshop ) ist.
GitHub Desktop Um den git fetch Befehl auszuführen, klicken Sie auf den &amp;ldquo;Fetch origin&amp;rdquo; Button in GitHub Desktop.</description></item><item><title>git merge</title><link>https://git-workshop.epages.works/collaboration/merge-conflicts/3_git-merge/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://git-workshop.epages.works/collaboration/merge-conflicts/3_git-merge/</guid><description>Als nächstes müssen Sie Ihren lokalen Branch mit den neusten Änderungen auf dem &amp;ldquo;main&amp;rdquo; Branch des &amp;ldquo;upstream&amp;rdquo; Repository zusammenführen. Diese Aktion wird als &amp;ldquo;git merge&amp;rdquo; bezeichnet.
GitHub Desktop Klicken Sie dazu zunächst auf den Button für die Branch-Verwaltung. In dem sich öffnenden Menü, klicken Sie auf den Button ganz unten, um einen Branch in den aktuellen Branch hinein zu mergen. Wählen Sie in dem sich öffnenden Dialog den Branch &amp;ldquo;upstream/main&amp;rdquo; aus.</description></item><item><title>git push</title><link>https://git-workshop.epages.works/collaboration/merge-conflicts/6_git-push/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://git-workshop.epages.works/collaboration/merge-conflicts/6_git-push/</guid><description>Der letzte Schritt zur Lösung des Merge Konflikt ist es, die Änderungen von dem lokalen Branch auf den Branch in dem Remote Repository zu publizieren.
GitHub Desktop Drücken Sie dazu in GitHub Desktop auf den &amp;ldquo;Push origin&amp;rdquo; Button.</description></item><item><title>Merge Konflikt auflösen</title><link>https://git-workshop.epages.works/collaboration/merge-conflicts/4_solve-conflict/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://git-workshop.epages.works/collaboration/merge-conflicts/4_solve-conflict/</guid><description>Nun müssen Sie Git darüber in Kenntnis setzen, wie der Merge Konflikt aufgelöst werden kann.
GitHub Desktop Nach der Durchführung von dem git merge Befehl zeigt Ihnen GitHub Desktop, in welchen Dateien es zu einem Merge Konflikt gekommen ist. Es bietet Ihnen an, direkt diese Datei in Ihrem Text Editor zu öffnen, z.B. Atom.
Text Editor Merge Konflikt Markierung Wenn Git während des Merging einen Konflikt erkennt, dann fügt es an dieser Stelle sowohl die Version der Textstelle auf dem aktuellen Branch als auch die Version der Textstelle auf dem gemergten Branch ein.</description></item></channel></rss>